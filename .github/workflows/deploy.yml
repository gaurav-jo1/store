name: Deploys latest code

on:
  push:
    branches:
      - master
      - staging

permissions:
  id-token: write
  contents: read

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/master' && 'production' || 'staging' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ vars.AWS_ROLE_NAME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        env:
          ECR_REGISTRY: ${{ vars.ECR_REGISTRY_WWW }}
          ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY_WWW }}
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: ${{ vars.ECR_REGISTRY_WWW }}/${{ vars.ECR_REPOSITORY_WWW }}:latest
          build-args: |
            ENVIRONMENT=${{ github.ref == 'refs/heads/master' && 'production' || 'staging' }}
            MIDDLEWARE_SECRET_KEY=${{ secrets.MIDDLEWARE_SECRET_KEY }}
            COGNITO_AUTHORITY=${{ vars.COGNITO_AUTHORITY }}
            COGNITO_CLIENT_ID=${{ vars.COGNITO_CLIENT_ID }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
